@page "/"
@layout HomeLayout
@inject IStoreService Store
<div id="carouselDiv" class="row p-0 m-0">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
        </ol>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="images/slide1.jpg" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="images/slide2.png" alt="Second slide">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<div class="form-inline justify-content-center mt-4">
    @if (Stores != null && Stores.Any())
    {
        @foreach (var store in FilteredToDos)
        {
            <a href="@($"stores/store/{store.Id}")" class="card col-lg-3 col-md-5 col-11 m-3 p-0 shadow" style="text-decoration:none;">
                <div>
                    <img class="card-img-top" src="" onerror="this.src = '/Images/store.jpg';" alt="Store image cap" />
                    <div class="card-body">
                        <h5 class="card-title text-dark">@store.Name</h5>
                        <p class="card-text"><small class="text-muted">@store.Country</small></p>
                        <p class="card-text"><small class="text-muted">@store.Type</small></p>
                    </div>
                </div>
            </a>
        }
    }
    else
    {
        <div style="left:53%;">
            <img src="/Images/loader.gif" />
        </div>
    }
</div>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

@code
{
    string SearchTerm { get; set; } = "";
    public IEnumerable<StoreDTO> Stores { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Stores = await Store.getAllStores();
    }
    List<StoreDTO> FilteredToDos => Stores.Where(i => i.Name.ToLower().Contains(SearchTerm.ToLower())).ToList();
}
